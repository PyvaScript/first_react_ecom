{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA-xxgvpjXOSlt4VvJfSo7RgeBEyvDfEnU\",\n  authDomain: \"rubber-to-runway.firebaseapp.com\",\n  projectId: \"rubber-to-runway\",\n  storageBucket: \"rubber-to-runway.appstop.com\",\n  messagingSenderId: \"345143883557\",\n  appId: \"1:345143883557:web:5336c0d8d812d8863acccc\"\n};\nconst firebaseapp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const snapShot = await getDoc(userDocRef);\n  console.log(snapShot.exists());\n  if (!snapShot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(\"Error creating user document\", error.message);\n    }\n    ;\n  }\n  ;\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signUserOut = async () => await signOut(auth);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseapp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","snapShot","console","log","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signUserOut"],"sources":["C:/Users/61428/Desktop/React Projects/rubber_to_runway/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\n\r\nimport {\r\n    getAuth,\r\n    signInWithRedirect,\r\n    signInWithPopup,\r\n    GoogleAuthProvider,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n} from 'firebase/auth';\r\n\r\nimport {\r\n    getFirestore,\r\n    doc,\r\n    getDoc,\r\n    setDoc,\r\n} from 'firebase/firestore';\r\n\r\nconst firebaseConfig={\r\n\r\n    apiKey: \"AIzaSyA-xxgvpjXOSlt4VvJfSo7RgeBEyvDfEnU\",\r\n\r\n    authDomain: \"rubber-to-runway.firebaseapp.com\",\r\n\r\n    projectId: \"rubber-to-runway\",\r\n    \r\n    storageBucket: \"rubber-to-runway.appstop.com\",\r\n\r\n    messagingSenderId: \"345143883557\",\r\n\r\n    appId: \"1:345143883557:web:5336c0d8d812d8863acccc\"\r\n\r\n};\r\n\r\nconst firebaseapp=initializeApp(firebaseConfig);\r\n\r\nconst provider=new GoogleAuthProvider();\r\n\r\nprovider.setCustomParameters({\r\n    prompt:'select_account',\r\n});\r\n\r\nexport const auth=getAuth();\r\n\r\nexport const signInWithGooglePopup=()=>signInWithPopup(auth, provider);\r\n\r\nexport const signInWithGoogleRedirect=()=>signInWithRedirect(auth, provider);\r\n\r\nexport const db=getFirestore();\r\n\r\nexport const createUserDocumentFromAuth=async(userAuth, additionalInformation={})=>{\r\n\r\n    if(!userAuth) return;\r\n\r\n    const userDocRef=doc(db,'users',userAuth.uid);\r\n    const snapShot=await getDoc(userDocRef);\r\n    console.log(snapShot.exists());\r\n    if(!snapShot.exists()){\r\n\r\n        const { displayName, email }=userAuth;\r\n        const createdAt=new Date();\r\n\r\n        try{\r\n\r\n            await setDoc(userDocRef, {\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalInformation\r\n            });\r\n\r\n        }catch(error){\r\n            console.log(\"Error creating user document\", error.message);\r\n        };\r\n        \r\n    };\r\n\r\n    return userDocRef;\r\n\r\n};\r\n\r\nexport const createAuthUserWithEmailAndPassword=async(email, password)=>{\r\n    if(!email || !password) return;\r\n\r\n    return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword=async(email, password)=>{\r\n    if(!email || !password) return;\r\n    \r\n    return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signUserOut=async()=>await signOut(auth);\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAE5C,SACIC,OAAO,EACPC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,EAClBC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,QACJ,eAAe;AAEtB,SACIC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,MAAM,QACH,oBAAoB;AAE3B,MAAMC,cAAc,GAAC;EAEjBC,MAAM,EAAE,yCAAyC;EAEjDC,UAAU,EAAE,kCAAkC;EAE9CC,SAAS,EAAE,kBAAkB;EAE7BC,aAAa,EAAE,8BAA8B;EAE7CC,iBAAiB,EAAE,cAAc;EAEjCC,KAAK,EAAE;AAEX,CAAC;AAED,MAAMC,WAAW,GAACnB,aAAa,CAACY,cAAc,CAAC;AAE/C,MAAMQ,QAAQ,GAAC,IAAIhB,kBAAkB,EAAE;AAEvCgB,QAAQ,CAACC,mBAAmB,CAAC;EACzBC,MAAM,EAAC;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAACtB,OAAO,EAAE;AAE3B,OAAO,MAAMuB,qBAAqB,GAAC,MAAIrB,eAAe,CAACoB,IAAI,EAAEH,QAAQ,CAAC;AAEtE,OAAO,MAAMK,wBAAwB,GAAC,MAAIvB,kBAAkB,CAACqB,IAAI,EAAEH,QAAQ,CAAC;AAE5E,OAAO,MAAMM,EAAE,GAAClB,YAAY,EAAE;AAE9B,OAAO,MAAMmB,0BAA0B,GAAC,gBAAMC,QAAQ,EAA6B;EAAA,IAA3BC,qBAAqB,uEAAC,CAAC,CAAC;EAE5E,IAAG,CAACD,QAAQ,EAAE;EAEd,MAAME,UAAU,GAACrB,GAAG,CAACiB,EAAE,EAAC,OAAO,EAACE,QAAQ,CAACG,GAAG,CAAC;EAC7C,MAAMC,QAAQ,GAAC,MAAMtB,MAAM,CAACoB,UAAU,CAAC;EACvCG,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,MAAM,EAAE,CAAC;EAC9B,IAAG,CAACH,QAAQ,CAACG,MAAM,EAAE,EAAC;IAElB,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAACT,QAAQ;IACrC,MAAMU,SAAS,GAAC,IAAIC,IAAI,EAAE;IAE1B,IAAG;MAEC,MAAM5B,MAAM,CAACmB,UAAU,EAAE;QACrBM,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGT;MACP,CAAC,CAAC;IAEN,CAAC,QAAMW,KAAK,EAAC;MACTP,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEM,KAAK,CAACC,OAAO,CAAC;IAC9D;IAAC;EAEL;EAAC;EAED,OAAOX,UAAU;AAErB,CAAC;AAED,OAAO,MAAMY,kCAAkC,GAAC,OAAML,KAAK,EAAEM,QAAQ,KAAG;EACpE,IAAG,CAACN,KAAK,IAAI,CAACM,QAAQ,EAAE;EAExB,OAAO,MAAMtC,8BAA8B,CAACkB,IAAI,EAAEc,KAAK,EAAEM,QAAQ,CAAC;AACtE,CAAC;AAED,OAAO,MAAMC,kCAAkC,GAAC,OAAMP,KAAK,EAAEM,QAAQ,KAAG;EACpE,IAAG,CAACN,KAAK,IAAI,CAACM,QAAQ,EAAE;EAExB,OAAO,MAAMrC,0BAA0B,CAACiB,IAAI,EAAEc,KAAK,EAAEM,QAAQ,CAAC;AAClE,CAAC;AAED,OAAO,MAAME,WAAW,GAAC,YAAS,MAAMtC,OAAO,CAACgB,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}